@*@model IEnumerable<Core.Entities.Vox>*@
@model IEnumerable<Voxed.WebApp.Models.VoxResponse>

@{
    ViewData["Title"] = Model.Select(x => x.Category).FirstOrDefault();
}

<main>
    <div class="loadNewVox disabled unselect" data-voxs="0" id="voxLoadMore"></div>
    <div class="voxList" id="voxList">

        @*<a href="/home/info" class="vox newInVoxed"
               style="background: url(/img/home/version4.png);">
                <div class="voxHeader">
                    <div class="tagList">
                        <div class="tag sticky">Info y Reglas</div>
                    </div>
                </div>
                <h4 class="title textShadon">¿Nuevo en Voxed?</h4>
                <div class="over"></div>
            </a>*@

        @*<a href="https://brave.com/vox812" data-event="click,button,AD_HOME_1"
               class="vox" id="voxad"
               style="background: url(https://content.voxed.net/brave1.gif);">
                <div class="voxHeader">
                    <div class="tagList">
                        <div class="tag sticky">Ads</div>
                    </div>
                </div>
                <h4 class="title textShadon">¡Ganá dinero mientras navegas!</h4>
                <div class="over"></div>
            </a>*@

        @await Component.InvokeAsync("VoxDetails", Model)

    </div>
    <div class="loadingSpinner hide" id="homeLoadingSpinner"><i class="fas fa-spinner fa-spin"></i></div>
</main>
<script>
    var ACTUAL_PAGE = "category-@Model.Select(x => x.Slug).FirstOrDefault()";
    var TITLE = "Voxed ";
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}